/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BuildType } from './BuildType.ts';
import { BuildTypes } from './BuildTypes.ts';
import { CloudProfiles } from './CloudProfiles.ts';
import { Links } from './Links.ts';
import { ProjectFeatures } from './ProjectFeatures.ts';
import { Projects } from './Projects.ts';
import { Properties } from './Properties.ts';
import { StateField } from './StateField.ts';
import { VcsRoots } from './VcsRoots.ts';
import { HttpFile } from '../http/http.ts';

export class Project {
    'id'?: string;
    'internalId'?: string;
    'uuid'?: string;
    'name'?: string;
    'parentProjectId'?: string;
    'parentProjectInternalId'?: string;
    'parentProjectName'?: string;
    'archived'?: boolean;
    'description'?: string;
    'href'?: string;
    'webUrl'?: string;
    'links'?: Links;
    'parentProject'?: Project;
    'readOnlyUI'?: StateField;
    'defaultTemplate'?: BuildType;
    'buildTypes'?: BuildTypes;
    'templates'?: BuildTypes;
    'parameters'?: Properties;
    'vcsRoots'?: VcsRoots;
    'projectFeatures'?: ProjectFeatures;
    'projects'?: Projects;
    'cloudProfiles'?: CloudProfiles;
    'locator'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "internalId",
            "baseName": "internalId",
            "type": "string",
            "format": ""
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "parentProjectId",
            "baseName": "parentProjectId",
            "type": "string",
            "format": ""
        },
        {
            "name": "parentProjectInternalId",
            "baseName": "parentProjectInternalId",
            "type": "string",
            "format": ""
        },
        {
            "name": "parentProjectName",
            "baseName": "parentProjectName",
            "type": "string",
            "format": ""
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string",
            "format": ""
        },
        {
            "name": "webUrl",
            "baseName": "webUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Links",
            "format": ""
        },
        {
            "name": "parentProject",
            "baseName": "parentProject",
            "type": "Project",
            "format": ""
        },
        {
            "name": "readOnlyUI",
            "baseName": "readOnlyUI",
            "type": "StateField",
            "format": ""
        },
        {
            "name": "defaultTemplate",
            "baseName": "defaultTemplate",
            "type": "BuildType",
            "format": ""
        },
        {
            "name": "buildTypes",
            "baseName": "buildTypes",
            "type": "BuildTypes",
            "format": ""
        },
        {
            "name": "templates",
            "baseName": "templates",
            "type": "BuildTypes",
            "format": ""
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "Properties",
            "format": ""
        },
        {
            "name": "vcsRoots",
            "baseName": "vcsRoots",
            "type": "VcsRoots",
            "format": ""
        },
        {
            "name": "projectFeatures",
            "baseName": "projectFeatures",
            "type": "ProjectFeatures",
            "format": ""
        },
        {
            "name": "projects",
            "baseName": "projects",
            "type": "Projects",
            "format": ""
        },
        {
            "name": "cloudProfiles",
            "baseName": "cloudProfiles",
            "type": "CloudProfiles",
            "format": ""
        },
        {
            "name": "locator",
            "baseName": "locator",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Project.attributeTypeMap;
    }
    
    public constructor() {
    }
}

