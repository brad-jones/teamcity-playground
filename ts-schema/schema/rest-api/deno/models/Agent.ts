/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AgentPool } from './AgentPool.ts';
import { AuthorizedInfo } from './AuthorizedInfo.ts';
import { Build } from './Build.ts';
import { BuildTypes } from './BuildTypes.ts';
import { Builds } from './Builds.ts';
import { CloudImage } from './CloudImage.ts';
import { CloudInstance } from './CloudInstance.ts';
import { Compatibilities } from './Compatibilities.ts';
import { CompatibilityPolicy } from './CompatibilityPolicy.ts';
import { EnabledInfo } from './EnabledInfo.ts';
import { Environment } from './Environment.ts';
import { Links } from './Links.ts';
import { Properties } from './Properties.ts';
import { HttpFile } from '../http/http.ts';

export class Agent {
    'id'?: number;
    'name'?: string;
    'typeId'?: number;
    'connected'?: boolean;
    'enabled'?: boolean;
    'authorized'?: boolean;
    'uptodate'?: boolean;
    'outdated'?: boolean;
    'pluginsOutdated'?: boolean;
    'javaOutdated'?: boolean;
    'ip'?: string;
    'protocol'?: string;
    'version'?: string;
    'currentAgentVersion'?: string;
    'lastActivityTime'?: string;
    'idleSinceTime'?: string;
    'disconnectionComment'?: string;
    'registrationTimestamp'?: string;
    'host'?: string;
    'cpuRank'?: number;
    'port'?: number;
    'href'?: string;
    'webUrl'?: string;
    'build'?: Build;
    'links'?: Links;
    'enabledInfo'?: EnabledInfo;
    'authorizedInfo'?: AuthorizedInfo;
    'properties'?: Properties;
    'cloudInstance'?: CloudInstance;
    'cloudImage'?: CloudImage;
    'environment'?: Environment;
    'pool'?: AgentPool;
    'compatibilityPolicy'?: CompatibilityPolicy;
    'compatibleBuildTypes'?: BuildTypes;
    'incompatibleBuildTypes'?: Compatibilities;
    'builds'?: Builds;
    'locator'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "typeId",
            "baseName": "typeId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "connected",
            "baseName": "connected",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "authorized",
            "baseName": "authorized",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "uptodate",
            "baseName": "uptodate",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "outdated",
            "baseName": "outdated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "pluginsOutdated",
            "baseName": "pluginsOutdated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "javaOutdated",
            "baseName": "javaOutdated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "ip",
            "baseName": "ip",
            "type": "string",
            "format": ""
        },
        {
            "name": "protocol",
            "baseName": "protocol",
            "type": "string",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "currentAgentVersion",
            "baseName": "currentAgentVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastActivityTime",
            "baseName": "lastActivityTime",
            "type": "string",
            "format": ""
        },
        {
            "name": "idleSinceTime",
            "baseName": "idleSinceTime",
            "type": "string",
            "format": ""
        },
        {
            "name": "disconnectionComment",
            "baseName": "disconnectionComment",
            "type": "string",
            "format": ""
        },
        {
            "name": "registrationTimestamp",
            "baseName": "registrationTimestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "host",
            "baseName": "host",
            "type": "string",
            "format": ""
        },
        {
            "name": "cpuRank",
            "baseName": "cpuRank",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string",
            "format": ""
        },
        {
            "name": "webUrl",
            "baseName": "webUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "build",
            "baseName": "build",
            "type": "Build",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Links",
            "format": ""
        },
        {
            "name": "enabledInfo",
            "baseName": "enabledInfo",
            "type": "EnabledInfo",
            "format": ""
        },
        {
            "name": "authorizedInfo",
            "baseName": "authorizedInfo",
            "type": "AuthorizedInfo",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Properties",
            "format": ""
        },
        {
            "name": "cloudInstance",
            "baseName": "cloudInstance",
            "type": "CloudInstance",
            "format": ""
        },
        {
            "name": "cloudImage",
            "baseName": "cloudImage",
            "type": "CloudImage",
            "format": ""
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "Environment",
            "format": ""
        },
        {
            "name": "pool",
            "baseName": "pool",
            "type": "AgentPool",
            "format": ""
        },
        {
            "name": "compatibilityPolicy",
            "baseName": "compatibilityPolicy",
            "type": "CompatibilityPolicy",
            "format": ""
        },
        {
            "name": "compatibleBuildTypes",
            "baseName": "compatibleBuildTypes",
            "type": "BuildTypes",
            "format": ""
        },
        {
            "name": "incompatibleBuildTypes",
            "baseName": "incompatibleBuildTypes",
            "type": "Compatibilities",
            "format": ""
        },
        {
            "name": "builds",
            "baseName": "builds",
            "type": "Builds",
            "format": ""
        },
        {
            "name": "locator",
            "baseName": "locator",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Agent.attributeTypeMap;
    }
    
    public constructor() {
    }
}

