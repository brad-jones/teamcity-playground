/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Changes } from './Changes.ts';
import { FileChanges } from './FileChanges.ts';
import { Items } from './Items.ts';
import { Properties } from './Properties.ts';
import { User } from './User.ts';
import { VcsRootInstance } from './VcsRootInstance.ts';
import { HttpFile } from '../http/http.ts';

export class Change {
    'id'?: number;
    'version'?: string;
    'internalVersion'?: string;
    'username'?: string;
    'date'?: string;
    'registrationDate'?: string;
    'personal'?: boolean;
    'href'?: string;
    'webUrl'?: string;
    'comment'?: string;
    'user'?: User;
    'files'?: FileChanges;
    'vcsRootInstance'?: VcsRootInstance;
    'parentChanges'?: Changes;
    'parentRevisions'?: Items;
    'attributes'?: Properties;
    'storesProjectSettings'?: boolean;
    'locator'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "internalVersion",
            "baseName": "internalVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "string",
            "format": ""
        },
        {
            "name": "registrationDate",
            "baseName": "registrationDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "personal",
            "baseName": "personal",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string",
            "format": ""
        },
        {
            "name": "webUrl",
            "baseName": "webUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "comment",
            "baseName": "comment",
            "type": "string",
            "format": ""
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "User",
            "format": ""
        },
        {
            "name": "files",
            "baseName": "files",
            "type": "FileChanges",
            "format": ""
        },
        {
            "name": "vcsRootInstance",
            "baseName": "vcsRootInstance",
            "type": "VcsRootInstance",
            "format": ""
        },
        {
            "name": "parentChanges",
            "baseName": "parentChanges",
            "type": "Changes",
            "format": ""
        },
        {
            "name": "parentRevisions",
            "baseName": "parentRevisions",
            "type": "Items",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "Properties",
            "format": ""
        },
        {
            "name": "storesProjectSettings",
            "baseName": "storesProjectSettings",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "locator",
            "baseName": "locator",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Change.attributeTypeMap;
    }
    
    public constructor() {
    }
}

